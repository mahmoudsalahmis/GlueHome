// <auto-generated />
using System;
using GlueHome.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GlueHome.Persistence.Migrations
{
    [DbContext(typeof(GlueHomeDbContext))]
    partial class GlueHomeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GlueHome.Domain.Entities.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("GlueHome.Domain.Entities.Delivery", b =>
                {
                    b.OwnsOne("GlueHome.Domain.ValueObjects.AccessWindow", "AccessWindow", b1 =>
                        {
                            b1.Property<Guid>("DeliveryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("EndTime")
                                .HasColumnType("datetime2")
                                .HasColumnName("AccessWindowEndTime");

                            b1.Property<DateTime>("StartTime")
                                .HasColumnType("datetime2")
                                .HasColumnName("AccessWindowStartTime");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Delivery");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.OwnsOne("GlueHome.Domain.ValueObjects.Order", "Order", b1 =>
                        {
                            b1.Property<Guid>("DeliveryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("OrderNumber")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("OrderNumber");

                            b1.Property<string>("Sender")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("OrderSender");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Delivery");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.OwnsOne("GlueHome.Domain.ValueObjects.Recipient", "Recipient", b1 =>
                        {
                            b1.Property<Guid>("DeliveryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("RecipientAddress");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("RecipientEmail");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("RecipientName");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("RecipientPhone");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Delivery");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.Navigation("AccessWindow");

                    b.Navigation("Order");

                    b.Navigation("Recipient");
                });
#pragma warning restore 612, 618
        }
    }
}
